package com.spring.coffeeorderproject.dao;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.Map;

import org.mybatis.spring.SqlSessionTemplate;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.core.RowMapper;

import com.spring.coffeeorderproject.dto.UserDto;
import com.spring.coffeeorderproject.service.AccountService;

import lombok.Setter;

public class MySqlAccountDaoWithMyBatis implements AccountDao {
	
//	@Setter
//	private JdbcTemplate jdbcTemplate;
	
	@Setter
	private SqlSessionTemplate sqlSessionTemplate;
	
	private final String USER_MAPPER = "com.coffeeorderproject.mapper.UserMapper.";
	
	@Override
	public void insertUser(UserDto user) {
		sqlSessionTemplate.insert(USER_MAPPER + "insertUser", user);
	}
	
	@Override
	public Boolean idCheck(String id) {
		int isHave = sqlSessionTemplate.selectOne(USER_MAPPER + "idCheck", id);
		return isHave < 1;
	}
	
	@Override
	public UserDto selectUser(UserDto user) {
		UserDto selectedMember = sqlSessionTemplate.selectOne(USER_MAPPER + "selectUser", user);
		return selectedMember;
	}
	
	@Override
	public UserDto selectUserEmail(String id) {
		
		String sql = "SELECT useremail from user WHERE userid = ?";
		
		UserDto selectedMember = 
				jdbcTemplate.queryForObject(sql, 
						new RowMapper<UserDto>() {

							@Override
							public UserDto mapRow(ResultSet rs, int rowNum) throws SQLException {
								
								UserDto member = new UserDto();
								member.setUserEmail(rs.getString(1));
								
								return member;
							}
						
						},
						id);
			
		return selectedMember;
		
	}
	
	@Override
	public void updateUserPw(String userId, String newPw) {
		
		String sql = "UPDATE user SET userpw = ? WHERE userid = ?";
		jdbcTemplate.update(sql, userId, newPw);
			
	}
	
	@Override
	public void updateUser(String userId) {
		
		String sql = "UPDATE user SET useractive = 1 WHERE userid = ? ";
		jdbcTemplate.update(sql, userId);
			
	}	
	
}